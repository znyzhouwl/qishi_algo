# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def mergeKLists(self, lists):
        """
        :type lists: List[ListNode]
        :rtype: ListNode
        """
        def merge2list(p, q):
            res = ListNode(0)
            temp = res
            while q and p:
                if p.val <= q.val:
                    temp.next = p
                    p = p.next
                else:
                    temp.next = q
                    q = q.next
                temp = temp.next
            if q:
                temp.next = q
            else:
                temp.next = p
            return res.next
        if not lists:
            return None
        n = len(lists)
        
        while n > 1:
            m,r = divmod(n,2)
            for i in range(m):
                lists[i] = merge2list(lists[i],lists[n - 1 - i])
            n = m + r
        return lists[0]
