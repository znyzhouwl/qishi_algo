class Solution:
    def kClosest(self, points: List[List[int]], k: int) -> List[List[int]]:
        dist = lambda i: points[i][0] ** 2 + points[i][1] ** 2
        
        def sort(i,j,K):
            if i >= j:
                return
            k = random.randint(i,j)
            points[i], points[k] = points[k], points[i]
            mid = partition(i,j)
            
            if K < mid - i + 1:
                sort(i,mid - 1, K)
            elif  K > mid - i + 1:
                sort(mid + 1, j, K - (mid - i + 1))
        
        def partition(i,j):
            l, r = i + 1, j
            pivot = dist(i)
            while True:
                while l < r and dist(l) < pivot:
                    l += 1
                while l <= r and dist(r) >= pivot:
                    r -= 1
                if l >= r: break
                points[l], points[r] = points[r], points[l]
            points[i], points[r] = points[r], points[i]
            return r
        sort(0,len(points) - 1, k)
        return points[:k]
