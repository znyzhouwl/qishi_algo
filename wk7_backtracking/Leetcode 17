class Solution(object):
    def letterCombinations(self, digits):
        """
        :type digits: str
        :rtype: List[str]
        """
        maps = {"2":["a","b","c"],"3":["d","e","f"], "4":["g","h","i"], "5": ["j","k","l"], "6":["m","n","o"],"7":["p","q","r","s"], "8":["t","u","v"],"9":["w","x","y","z"]}
        def dfs(cur,digits):
            if not digits:
                output.append(cur)
                return
            for char in maps[digits[0]]:
                dfs(cur + char,digits[1:])
        output = []
        if not digits:
            return output
        dfs("",digits)
        return output
